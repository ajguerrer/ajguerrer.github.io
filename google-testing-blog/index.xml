<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google Testing Blog on Notebook</title>
    <link>https://ajguerrer.github.io/google-testing-blog/</link>
    <description>Recent content in Google Testing Blog on Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ajguerrer.github.io/google-testing-blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing on the Toilet</title>
      <link>https://ajguerrer.github.io/google-testing-blog/tott/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ajguerrer.github.io/google-testing-blog/tott/</guid>
      <description>Exercise Service Call Contracts in Tests November 27, 2018 - original post
If the code under test relies on the contract of a service, prefer exercising the service call instead of mocking it out. Some service owners provide a fake. Otherwise, use a hermetic server.
Make Interfaces Hard to Misuse July 25, 2018 - original post
Don&amp;rsquo;t push the responsibility of maintaining invariants on the caller.
class Vector { explicit Vector(int num_slots); int RemainingSlots() const; void AddSlots(int num_slots); void Insert(int value); };   Caller needs to check RemainingSlots and if 0, AddSlots in order for Insert to work properly.</description>
    </item>
    
  </channel>
</rss>